{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "AWS EC2 SSH access with IAM showcase",
    "Parameters": {
        "VPC": {
            "Type": "AWS::EC2::VPC::Id",
            "Description": "The VPC the EC2 instance is launched into."
        },
        "Subnet": {
            "Type": "AWS::EC2::Subnet::Id",
            "Description": "The subnet the EC2 instance is launched into."
        }
    },
    "Mappings": {
        "RegionMap": {
            "ap-south-1": {
                "AMI": "ami-cacbbea5"
            },
            "eu-west-1": {
                "AMI": "ami-d41d58a7"
            },
            "ap-northeast-2": {
                "AMI": "ami-a04297ce"
            },
            "ap-northeast-1": {
                "AMI": "ami-1a15c77b"
            },
            "sa-east-1": {
                "AMI": "ami-b777e4db"
            },
            "ap-southeast-1": {
                "AMI": "ami-7243e611"
            },
            "ap-southeast-2": {
                "AMI": "ami-55d4e436"
            },
            "eu-central-1": {
                "AMI": "ami-0044b96f"
            },
            "us-east-1": {
                "AMI": "ami-c481fad3"
            },
            "us-east-2": {
                "AMI": "ami-71ca9114"
            },
            "us-west-1": {
                "AMI": "ami-de347abe"
            },
            "us-west-2": {
                "AMI": "ami-b04e92d0"
            }
        }
    },
    "Resources": {
        "SecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "ssh",
                "VpcId": {
                    "Ref": "VPC"
                },
                "SecurityGroupIngress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "IpProtocol": "tcp",
                        "FromPort": 22,
                        "ToPort": 22
                    }
                ]
            }
        },
        "InstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Roles": [
                    {
                        "Ref": "Role"
                    }
                ]
            }
        },
        "Role": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "ec2.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "iam",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": "iam:ListUsers",
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "iam:ListSSHPublicKeys",
                                        "iam:GetSSHPublicKey"
                                    ],
                                    "Resource": {
                                        "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:user/*"
                                    }
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "Instance": {
            "Type": "AWS::EC2::Instance",
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "config": {
                        "files": {
                            "/opt/authorized_keys_command.sh": {
                                "content": "#!/bin/bash -e\nif [ -z \"$1\" ]; then\n  exit 1\nfi\n\nSaveUserName=\"$1\"\nSaveUserName=${SaveUserName//\"+\"/\".plus.\"}\nSaveUserName=${SaveUserName//\"=\"/\".equal.\"}\nSaveUserName=${SaveUserName//\",\"/\".comma.\"}\nSaveUserName=${SaveUserName//\"@\"/\".at.\"}\n\naws iam list-ssh-public-keys --user-name \"$SaveUserName\" --query \"SSHPublicKeys[?Status == 'Active'].[SSHPublicKeyId]\" --output text | while read KeyId; do\n  aws iam get-ssh-public-key --user-name \"$SaveUserName\" --ssh-public-key-id \"$KeyId\" --encoding SSH --query \"SSHPublicKey.SSHPublicKeyBody\" --output text\ndone\n",
                                "mode": "000755",
                                "owner": "root",
                                "group": "root"
                            },
                            "/opt/import_users.sh": {
                                "content": "#!/bin/bash\n\naws iam list-users --query \"Users[].[UserName]\" --output text | while read User; do\n  SaveUserName=\"$User\"\n  SaveUserName=${SaveUserName//\"+\"/\".plus.\"}\n  SaveUserName=${SaveUserName//\"=\"/\".equal.\"}\n  SaveUserName=${SaveUserName//\",\"/\".comma.\"}\n  SaveUserName=${SaveUserName//\"@\"/\".at.\"}\n  if id -u \"$SaveUserName\" >/dev/null 2>&1; then\n    echo \"$SaveUserName exists\"\n  else\n    #sudo will read each file in /etc/sudoers.d, skipping file names that end in ���~��� or contain a ���.��� character to avoid causing problems with package manager or editor temporary/backup files.\n    SaveUserFileName=$(echo \"$SaveUserName\" | tr \".\" \" \")\n    /usr/sbin/adduser \"$SaveUserName\"\n    echo \"$SaveUserName ALL=(ALL) NOPASSWD:ALL\" > \"/etc/sudoers.d/$SaveUserFileName\"\n  fi\ndone\n",
                                "mode": "000755",
                                "owner": "root",
                                "group": "root"
                            },
                            "/etc/cron.d/import_users": {
                                "content": "*/10 * * * * root /opt/import_users.sh\n",
                                "mode": "000644",
                                "owner": "root",
                                "group": "root"
                            },
                            "/etc/cfn/cfn-hup.conf": {
                                "content": {
                                    "Fn::Sub": "[main]\nstack=${AWS::StackId}\nregion=${AWS::Region}\ninterval=1\n"
                                },
                                "mode": "000400",
                                "owner": "root",
                                "group": "root"
                            },
                            "/etc/cfn/hooks.d/cfn-auto-reloader.conf": {
                                "content": {
                                    "Fn::Sub": "[cfn-auto-reloader-hook]\ntriggers=post.update\npath=Resources.Instance.Metadata.AWS::CloudFormation::Init\naction=/opt/aws/bin/cfn-init --verbose --stack=${AWS::StackName}  --region=${AWS::Region}  --resource=Instance\nrunas=root\n"
                                }
                            }
                        },
                        "commands": {
                            "a_configure_sshd_command": {
                                "command": "sed -i 's:#AuthorizedKeysCommand none:AuthorizedKeysCommand /opt/authorized_keys_command.sh:g' /etc/ssh/sshd_config"
                            },
                            "b_configure_sshd_commanduser": {
                                "command": "sed -i 's:#AuthorizedKeysCommandUser nobody:AuthorizedKeysCommandUser nobody:g' /etc/ssh/sshd_config"
                            },
                            "c_import_users": {
                                "command": "./import_users.sh",
                                "cwd": "/opt"
                            }
                        },
                        "services": {
                            "sysvinit": {
                                "cfn-hup": {
                                    "enabled": true,
                                    "ensureRunning": true,
                                    "files": [
                                        "/etc/cfn/cfn-hup.conf",
                                        "/etc/cfn/hooks.d/cfn-auto-reloader.conf"
                                    ]
                                },
                                "sshd": {
                                    "enabled": true,
                                    "ensureRunning": true,
                                    "commands": [
                                        "a_configure_sshd_command",
                                        "b_configure_sshd_commanduser"
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "RegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "AMI"
                    ]
                },
                "IamInstanceProfile": {
                    "Ref": "InstanceProfile"
                },
                "InstanceType": "t2.micro",
                "SecurityGroupIds": [
                    {
                        "Ref": "SecurityGroup"
                    }
                ],
                "SubnetId": {
                    "Ref": "Subnet"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Sub": "#!/bin/bash -x\n/opt/aws/bin/cfn-init --verbose --stack=${AWS::StackName} --region=${AWS::Region} --resource=Instance\n/opt/aws/bin/cfn-signal --exit-code=$? --stack=${AWS::StackName} --region=${AWS::Region}  --resource=Instance\n"
                    }
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "AWS EC2 SSH access with IAM showcase"
                    }
                ]
            },
            "CreationPolicy": {
                "ResourceSignal": {
                    "Count": 1,
                    "Timeout": "PT15M"
                }
            }
        }
    },
    "Outputs": {
        "PublicName": {
            "Description": "The public name of the EC2 instance.",
            "Value": {
                "Fn::GetAtt": [
                    "Instance",
                    "PublicDnsName"
                ]
            }
        }
    }
}